task buildDhf(type:Exec) {
	workingDir '.'
	commandLine 'docker', 'build', '-f', 'Dockerfile.dhf', '-t', "mlregistry.marklogic.com/envision/datahub:${envisionDockerVersion}", '-t', 'mlregistry.marklogic.com/envision/datahub:latest', '.'
}

task buildEnvision(type:Exec) {
	workingDir '.'
	commandLine 'docker', 'build', '-f', 'Dockerfile', '-t', "mlregistry.marklogic.com/envision/envision:${envisionDockerVersion}", '-t', 'mlregistry.marklogic.com/envision/envision:latest', '.'
}

task uploadDhfVer(type:Exec) {
	workingDir '.'
	commandLine 'docker', 'push', "mlregistry.marklogic.com/envision/datahub:${envisionDockerVersion}"
}

task uploadDhfLatest(type:Exec) {
	workingDir '.'
	commandLine 'docker', 'push', "mlregistry.marklogic.com/envision/datahub:latest"
}

task uploadEnvisionVer(type:Exec) {
	workingDir '.'
	commandLine 'docker', 'push', "mlregistry.marklogic.com/envision/envision:${envisionDockerVersion}"
}

task uploadEnvisionLatest(type:Exec) {
	workingDir '.'
	commandLine 'docker', 'push', "mlregistry.marklogic.com/envision/envision:latest"
}

// update the version in gradle.properties
task buildDockerImages {
	dependsOn buildDhf
	dependsOn buildEnvision
}

// needs to be on vpn
task uploadDockerImages {
	dependsOn uploadDhfVer
	dependsOn uploadDhfLatest
	dependsOn uploadEnvisionVer
	dependsOn uploadEnvisionLatest
}

task uie2e(type: Exec) {
	workingDir '.'
	commandLine 'docker-compose', '-f', 'docker-compose.test.yml', 'up', '--exit-code-from', 'cypress'
}
